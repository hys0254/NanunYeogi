{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\82108\\\\Desktop\\\\Paasta\\\\NanunYeogi\\\\Jinho\\\\frontend\\\\src\\\\components\\\\pages\\\\Today.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Users() {\n  _s();\n\n  const [users, setUsers] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchUsers = async () => {\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null);\n      setUsers(null); // loading 상태를 true 로 바꿉니다.\n\n      setLoading(true);\n      const response = await axios.get('http://nanunyeogi.paas-ta.org/covid');\n      setUsers(response.data); // 데이터는 response.data 안에 들어있습니다.\n    } catch (e) {\n      setError(e);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529\\uC911..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (!users) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.username, \" (\", user.name, \")\"]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchUsers,\n      children: \"\\uB2E4\\uC2DC \\uBD88\\uB7EC\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Users, \"tq8fu1gobXtE39DyM7UStpaQx7k=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/Users/82108/Desktop/Paasta/NanunYeogi/Jinho/frontend/src/components/pages/Today.js"],"names":["React","useState","useEffect","axios","Users","users","setUsers","loading","setLoading","error","setError","fetchUsers","response","get","data","e","map","user","username","name","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMU,UAAU,GAAG,YAAY;AAC3B,QAAI;AACA;AACAD,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAJ,MAAAA,QAAQ,CAAC,IAAD,CAAR,CAHA,CAIA;;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMI,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CACnB,qCADmB,CAAvB;AAGAP,MAAAA,QAAQ,CAACM,QAAQ,CAACE,IAAV,CAAR,CATA,CASyB;AAC5B,KAVD,CAUE,OAAOC,CAAP,EAAU;AACRL,MAAAA,QAAQ,CAACK,CAAD,CAAR;AACH;;AACDP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAfD;;AAiBAN,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIJ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAI,CAACJ,KAAL,EAAY,OAAO,IAAP;AACZ,sBACI;AAAA,4BACI;AAAA,gBACKA,KAAK,CAACW,GAAN,CAAUC,IAAI,iBACX;AAAA,mBACKA,IAAI,CAACC,QADV,QACsBD,IAAI,CAACE,IAD3B;AAAA,SAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAQ,MAAA,OAAO,EAAET,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAYH;;GAzCQP,K;;KAAAA,K;AA2CT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Users() {\r\n    const [users, setUsers] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchUsers = async () => {\r\n        try {\r\n            // 요청이 시작 할 때에는 error 와 users 를 초기화하고\r\n            setError(null);\r\n            setUsers(null);\r\n            // loading 상태를 true 로 바꿉니다.\r\n            setLoading(true);\r\n            const response = await axios.get(\r\n                'http://nanunyeogi.paas-ta.org/covid'\r\n            );\r\n            setUsers(response.data); // 데이터는 response.data 안에 들어있습니다.\r\n        } catch (e) {\r\n            setError(e);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    if (loading) return <div>로딩중..</div>;\r\n    if (error) return <div>에러가 발생했습니다</div>;\r\n    if (!users) return null;\r\n    return (\r\n        <>\r\n            <ul>\r\n                {users.map(user => (\r\n                    <li key={user.id}>\r\n                        {user.username} ({user.name})\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <button onClick={fetchUsers}>다시 불러오기</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Users;"]},"metadata":{},"sourceType":"module"}